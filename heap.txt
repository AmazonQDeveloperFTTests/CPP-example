#include <bits/stdc++.h>
using namespace std;
  
  void heap(int arr[], int n, int i) {
    // Find largest among root, left child and right child
    int l = i;
    int le = 2 * i + 1;
    int ri = 2 * i + 2;
  
    if (le < n && arr[le] > arr[l])
      l = le;
  
    if (ri < n && arr[ri] > arr[l])
      l = ri;
  
    // Swap and continue heapifying if root is not largest
    if (l != i) {
      swap(arr[i], arr[l]);
      heap(arr, n, l);
    }
  }
  void heapSort(int arr[], int n) {
    // Build max heap
    for (int i = n / 2 - 1; i >= 0; i--)
      heap(arr, n, i);
  
    // Heap sort
    for (int i = n - 1; i >= 0; i--) {
      swap(arr[0], arr[i]);
  
      // Heapify root element to get highest element at root again
      heap(arr, i, 0);
    }
  }
  
  // Print an array
  void printArray(int arr[], int n) {
    for (int i = 0; i < n; ++i)
      cout << arr[i] << " ";
    cout << "\n";
  }
  
  // Driver code
  int main() {
    int n,arr[n];
    cin>>n;
    for(int i=0;i<n;i++) {
    	cin>>arr[i];
    }
    heapSort(arr, n);
  
    cout << "Sorted array is \n";
    printArray(arr, n);
  }